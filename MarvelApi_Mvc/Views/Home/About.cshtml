<br />
<body>
    <div class="container-fluid text-center text-white d-flex align-items-center justify-content-center
        flex-column hero-section about-section-main">
        <div class="overlay"></div>
        <div class="content overlay-txt">
            <h1 class="typing-text typing-text-faster">About</h1>
        </div>
        <div class="content">
            <p class="lead">
                MarvelAPI is your gateway to the Marvel Comics universe, offering detailed character profiles and exploring the connections between iconic heroes and villains. Built with cutting-edge .NET technologies, MarvelAPI provides an immersive experience for all Marvel fans.
            </p>
        </div>
    </div>
    <section class="about-section">
        <div class="about-section-container">
            <div class="about-section-box-header">
                <h2>Fullstack .NET Developer</h2>
            </div>
            <div class="about-section-box-empty">

            </div>
            <div class="about-section-box-info">
                <div class="about-section-box-img">
                    <img src="/images/marvel-characters-canvas.jpg" />
                </div>
                <div class="about-section-box-description">
                    <h3>Mislav Bučar</h3>
                    <p>I'm a passionate .NET developer with over two years of experience in building robust and scalable applications. My expertise lies in working with .NET technologies, including Blazor, MVC, and WPF. I have a solid understanding of both front-end and back-end development, and I enjoy creating dynamic and user-friendly applications.</p>
                    <p>Throughout my career, I've been involved in various projects, ranging from desktop applications to web solutions, and I've developed a deep appreciation for clean, maintainable code. I believe in continuous learning and am always exploring new technologies and methodologies to improve my skills and deliver the best results.</p>
                </div>
            </div>
        </div>
    </section>
    <section class="project-section">
        <div class="project-section-container reverse-skew">
            <div class="project-section-box reverse-alignment">
                <h4 class="project-technology">C# | .NET | API | MVC</h4>
                <div class="project-section-box-header reverse">
                    <h2 class="project-name">MarvelApi(this)</h2>
                    <div class="project-line"></div>
                    <a href="https://github.com/MiBucar/MarvelApi"><i class="fa-solid fa-link project-link"></i></a>
                </div>
                <p class="project-description reverse-text reverse-text">MarvelAPI is a comprehensive web application that showcases a rich database of Marvel characters and teams through a self-developed API. The project leverages a robust MVC architecture to deliver a seamless and interactive user experience. By integrating the custom-built API, the application allows users to explore detailed profiles, team affiliations, and storylines, all while demonstrating the power and flexibility of .NET technologies.</p>
                <a href="https://github.com/MiBucar/MarvelApi" class="search-input-btn btn-discover reverse-skew">Discover</a>
            </div>
        </div>

        <div class="project-section-container">
            <div class="project-section-box">
                <h4 class="project-technology">C# | .NET | Blazor</h4>
                <div class="project-section-box-header">
                    <h2 class="project-name">Trendora Clothing Webstore</h2>
                    <div class="project-line"></div>
                    <a href="https://github.com/MiBucar/Trendora"><i class="fa-solid fa-link project-link"></i></a>
                </div>
                <p class="project-description">Project in Blazor which is deployed and running. Containing functionalities You would expect such a site to contain. Working with databases and clean code architecture. The project is made using Blazor server which in real case scenario would be a bad choice and I am aware of it, the reason for going with Blazor server is because I wanted to challenge myself and experience with SignalR. Everything about the project is listen on GitHub, as well as the documentation for it.</p>
                <a href="https://github.com/MiBucar/Trendora" class="search-input-btn btn-discover">Discover</a>
            </div>
        </div>

        <div class="project-section-container reverse-skew">
            <div class="project-section-box reverse-alignment">
                <h4 class="project-technology">C# | Unity</h4>
                <div class="project-section-box-header reverse">
                    <h2 class="project-name">NaNaglo</h2>
                    <div class="project-line"></div>
                    <a href="https://play.google.com/store/apps/details?id=com.MislavBucar.NaNaglo&pli=1"><i class="fa-solid fa-link project-link"></i></a>
                </div>
                <p class="project-description reverse-text reverse-text">This was my first project ever. The game is currenly on Google Play Store and it is a social game intended for people to hang out together and have a great time. It is only for the Balkans as it's on Croatian language only. </p>
                <a href="https://play.google.com/store/apps/details?id=com.MislavBucar.NaNaglo&pli=1" class="search-input-btn btn-discover reverse-skew">Discover</a>
            </div>
        </div>

        <div class="project-section-container">
            <div class="project-section-box">
                <h4 class="project-technology">C++</h4>
                <div class="project-section-box-header">
                    <h2 class="project-name">Breakout using SDL library</h2>
                    <div class="project-line"></div>
                    <a href="https://github.com/MiBucar/BreakoutSDL2"><i class="fa-solid fa-link project-link"></i></a>
                </div>
                <p class="project-description">Retro arcade game where you control the paddle and have a main goal of breaking every brick to proceed to the next level. The goal here was to create dynamic level creation, only files that have to be edited to change the brick layout or add new levels are .xml files. It also has changeable settings and a leaderboard.</p>
                <a href="https://github.com/MiBucar/BreakoutSDL2" class="search-input-btn btn-discover">Discover</a>
            </div>
        </div>

        <div class="project-section-container reverse-skew">
            <div class="project-section-box reverse-alignment">
                <h4 class="project-technology">C++</h4>
                <div class="project-section-box-header reverse">
                    <h2 class="project-name">Flappy Bird using SDL library</h2>
                    <div class="project-line"></div>
                    <a href="https://github.com/MiBucar/FlappyBird"><i class="fa-solid fa-link project-link"></i></a>
                </div>
                <p class="project-description reverse-text reverse-text">The goal of this project was creating a functional game without using an engine. It has functionalities such as changing volume in settings, a leaderboard and a fun gameplay where you play as a burger bird dodging dining tables instead of pipes.</p>
                <a href="https://github.com/MiBucar/FlappyBird" class="search-input-btn btn-discover reverse-skew">Discover</a>
            </div>
        </div>
    </section>
</body>
// <auto-generated />
using System;
using MarvelApi_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarvelApi_Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240527111038_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CharacterAllies", b =>
                {
                    b.Property<int>("AllyId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("AllyId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterAllies");
                });

            modelBuilder.Entity("CharacterEnemies", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("EnemyId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "EnemyId");

                    b.HasIndex("EnemyId");

                    b.ToTable("CharacterEnemies");
                });

            modelBuilder.Entity("MarvelApi_Api.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Appearance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Backstory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsVillain")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Powers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Appearance = "Avengers",
                            Backstory = "Was  rich man",
                            DateCreated = new DateTime(2024, 5, 27, 11, 10, 38, 401, DateTimeKind.Utc).AddTicks(8190),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsVillain = false,
                            Name = "Iron man",
                            Origin = "New York",
                            Powers = "[\"laser\",\"Big laser\"]"
                        },
                        new
                        {
                            Id = 2,
                            Appearance = "Avengers",
                            Backstory = "Was  rich man",
                            DateCreated = new DateTime(2024, 5, 27, 11, 10, 38, 401, DateTimeKind.Utc).AddTicks(8190),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsVillain = true,
                            Name = "Thanos",
                            Origin = "New York",
                            Powers = "[\"laser\",\"Big laser\"]"
                        },
                        new
                        {
                            Id = 3,
                            Appearance = "Avengers",
                            Backstory = "Was  rich man",
                            DateCreated = new DateTime(2024, 5, 27, 11, 10, 38, 401, DateTimeKind.Utc).AddTicks(8190),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsVillain = false,
                            Name = "Daredevil",
                            Origin = "New York",
                            Powers = "[\"laser\",\"Big laser\"]"
                        });
                });

            modelBuilder.Entity("CharacterAllies", b =>
                {
                    b.HasOne("MarvelApi_Api.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("AllyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelApi_Api.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharacterEnemies", b =>
                {
                    b.HasOne("MarvelApi_Api.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelApi_Api.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("EnemyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
